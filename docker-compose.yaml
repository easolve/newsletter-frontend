services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    image: newsletter_backend
    container_name: newsletter_backend
    restart: always
    ports:
      - '8000:8000'
    env_file:
      - backend/.env
    environment:
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - newsletter_network
  db:
    image: mysql:8.0
    container_name: mysql_container
    restart: always
    env_file:
      - backend/.env
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: newsletter_schema
    ports:
      - '3307:3306'
    volumes:
      - db_data:/var/lib/mysql
      - ./my.cnf:/etc/my.cnf
    networks:
      - newsletter_network
    healthcheck:
      test:
        [
          'CMD',
          'mysqladmin',
          'ping',
          '-h',
          'localhost',
          '-u',
          'root',
          '-p${DATABASE_PASSWORD}',
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 80s

  redis:
    container_name: redis
    image: redis:7.4.2
    ports:
      - '6379:6379'
    networks:
      - newsletter_network

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: newsletter_worker
    restart: always
    depends_on:
      backend:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - newsletter_network
    env_file:
      - backend/.env

volumes:
  db_data:

networks:
  newsletter_network:
    driver: bridge
